#version 300 es
precision mediump float;
precision highp int;

uniform highp float param_Yvalue_texread;
uniform highp sampler2D ImageTexture;

in highp vec3 wnormal;
in highp vec2 texCoord;
out highp vec4 fragColor[2];

highp vec3 rgb_to_hsv(highp vec3 c)
{
    highp vec4 p = mix(vec4(c.zy, vec2(-1.0, 0.666666686534881591796875)), vec4(c.yz, vec2(0.0, -0.3333333432674407958984375)), vec4(step(c.z, c.y)));
    highp vec4 q = mix(vec4(p.xyw, c.x), vec4(c.x, p.yzx), vec4(step(p.x, c.x)));
    highp float d = q.x - min(q.w, q.y);
    highp float e = 1.0000000133514319600180897396058e-10;
    return vec3(abs(q.z + ((q.w - q.y) / ((6.0 * d) + e))), d / (q.x + e), q.x);
}

highp vec3 hsv_to_rgb(highp vec3 c)
{
    highp vec3 p = abs((fract(c.xxx + vec3(1.0, 0.666666686534881591796875, 0.3333333432674407958984375)) * 6.0) - vec3(3.0));
    return mix(vec3(1.0), clamp(p - vec3(1.0), vec3(0.0), vec3(1.0)), vec3(c.y)) * c.z;
}

highp vec3 hue_sat(highp vec3 col, highp vec4 shift)
{
    highp vec3 hsv = rgb_to_hsv(col);
    hsv.x += shift.x;
    hsv.y *= shift.y;
    hsv.z *= shift.z;
    return mix(hsv_to_rgb(hsv), col, vec3(shift.w));
}

highp vec2 octahedronWrap(highp vec2 v)
{
    return (vec2(1.0) - abs(v.yx)) * vec2((v.x >= 0.0) ? 1.0 : (-1.0), (v.y >= 0.0) ? 1.0 : (-1.0));
}

highp float packFloatInt16(highp float f, uint i)
{
    uint bitsInt = i << 12u;
    uint bitsFloat = uint(f * 4095.0);
    return float(bitsInt | bitsFloat);
}

highp float packFloat2(highp float f1, highp float f2)
{
    return floor(f1 * 255.0) + min(f2, 0.9900000095367431640625);
}

void main()
{
    highp vec3 n = normalize(wnormal);
    highp vec3 TextureCoordinate_texread_UV_res = vec3(texCoord.x, 1.0 - texCoord.y, 0.0);
    highp float SeparateXYZ_texread_X_res = TextureCoordinate_texread_UV_res.x;
    highp float SeparateXYZ_texread_Y_res = TextureCoordinate_texread_UV_res.y;
    highp float Yvalue_texread_Value_res = param_Yvalue_texread;
    highp float Math_texread_Value_res = SeparateXYZ_texread_Y_res + Yvalue_texread_Value_res;
    highp vec3 CombineXYZ_texread_Vector_res = vec3(SeparateXYZ_texread_X_res, Math_texread_Value_res, 0.0);
    highp vec4 ImageTexture_texread_store = texture(ImageTexture, vec2(CombineXYZ_texread_Vector_res.x, 1.0 - CombineXYZ_texread_Vector_res.y));
    highp vec3 _262 = pow(ImageTexture_texread_store.xyz, vec3(2.2000000476837158203125));
    ImageTexture_texread_store = vec4(_262.x, _262.y, _262.z, ImageTexture_texread_store.w);
    highp vec3 ImageTexture_Color_res = ImageTexture_texread_store.xyz;
    highp vec3 HueSaturationValue_Color_res = hue_sat(ImageTexture_Color_res, vec4(-0.0160000026226043701171875, 1.0, 0.670000016689300537109375, 0.0));
    highp vec3 Gamma_Color_res = pow(HueSaturationValue_Color_res, vec3(1.09000003337860107421875));
    highp float ImageTexture_Alpha_res = ImageTexture_texread_store.w;
    highp vec3 basecol = Gamma_Color_res;
    highp float roughness = 1.0;
    highp float metallic = 0.0;
    highp float occlusion = 1.0;
    highp float specular = 0.0;
    highp float emission = 0.0;
    highp float opacity = ImageTexture_Alpha_res - 0.00019999999494757503271102905273438;
    if (opacity < 0.99989998340606689453125)
    {
        discard;
    }
    n /= vec3((abs(n.x) + abs(n.y)) + abs(n.z));
    highp vec2 _317;
    if (n.z >= 0.0)
    {
        _317 = n.xy;
    }
    else
    {
        _317 = octahedronWrap(n.xy);
    }
    n = vec3(_317.x, _317.y, n.z);
    uint matid = 0u;
    if (emission > 0.0)
    {
        basecol *= emission;
        matid = 1u;
    }
    fragColor[0] = vec4(n.xy, roughness, packFloatInt16(metallic, matid));
    fragColor[1] = vec4(basecol, packFloat2(occlusion, specular));
}

