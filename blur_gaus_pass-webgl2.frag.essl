#version 300 es
precision mediump float;
precision highp int;

const float _74[10] = float[](0.132571995258331298828125, 0.12547199428081512451171875, 0.10637299716472625732421875, 0.0807799994945526123046875, 0.0549499988555908203125, 0.03348200023174285888671875, 0.018275000154972076416015625, 0.008933999575674533843994140625, 0.00391199998557567596435546875, 0.00153500004671514034271240234375);

uniform highp vec2 dir;
uniform highp vec2 screenSize;
uniform highp sampler2D tex;

out highp vec4 fragColor;
in highp vec2 texCoord;

void main()
{
    highp vec2 _step = (dir / screenSize) * 0.5;
    highp vec3 _34 = textureLod(tex, texCoord, 0.0).xyz * 0.132571995258331298828125;
    fragColor = vec4(_34.x, _34.y, _34.z, fragColor.w);
    for (int i = 1; i < 10; i++)
    {
        highp vec2 s = _step * (float(i) + 0.5);
        highp vec3 _84 = fragColor.xyz + (textureLod(tex, texCoord + s, 0.0).xyz * _74[i]);
        fragColor = vec4(_84.x, _84.y, _84.z, fragColor.w);
        highp vec3 _100 = fragColor.xyz + (textureLod(tex, texCoord - s, 0.0).xyz * _74[i]);
        fragColor = vec4(_100.x, _100.y, _100.z, fragColor.w);
    }
    highp vec3 _108 = fragColor.xyz * 0.579999983310699462890625;
    fragColor = vec4(_108.x, _108.y, _108.z, fragColor.w);
    highp vec3 _115 = min(fragColor.xyz, vec3(64.0));
    fragColor = vec4(_115.x, _115.y, _115.z, fragColor.w);
}

